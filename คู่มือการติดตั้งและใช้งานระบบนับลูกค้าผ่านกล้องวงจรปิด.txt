# คู่มือการติดตั้งและใช้งานระบบนับลูกค้าผ่านกล้องวงจรปิด

## 1. ข้อกำหนดของระบบ

### ฮาร์ดแวร์ขั้นต่ำ
- CPU: Intel Core i3 หรือเทียบเท่า
- RAM: 4GB หรือมากกว่า
- พื้นที่ว่าง: 1GB หรือมากกว่า
- กล้องเว็บแคมหรือกล้องวงจรปิดที่รองรับ RTSP

### ซอฟต์แวร์ที่จำเป็น
- Python 3.8 หรือสูงกว่า
- OpenCV, NumPy, Pillow
- สำหรับระบบ Linux: อาจต้องติดตั้ง tk สำหรับ GUI

## 2. การติดตั้ง

### 2.1 สำหรับ Linux

1. โคลนหรือดาวน์โหลดโค้ดและแตกไฟล์ไปยังโฟลเดอร์ที่ต้องการ

2. เข้าไปยังโฟลเดอร์ที่มีไฟล์โค้ด:
   ```bash
   cd shop_counter_client
   ```

3. รันสคริปต์ติดตั้ง:
   ```bash
   ./setup.sh
   ```

4. สคริปต์จะสร้างโครงสร้างโฟลเดอร์และติดตั้ง dependencies ที่จำเป็น

### 2.2 สำหรับ Windows

1. โคลนหรือดาวน์โหลดโค้ดและแตกไฟล์ไปยังโฟลเดอร์ที่ต้องการ

2. เปิด Command Prompt หรือ PowerShell แล้วนำทางไปยังโฟลเดอร์ที่มีไฟล์โค้ด:
   ```
   cd path\to\shop_counter_client
   ```

3. สร้างโครงสร้างโฟลเดอร์:
   ```
   mkdir client logs exports exports\snapshots exports\reports backups cache data
   type nul > client\__init__.py
   ```

4. ติดตั้ง dependencies:
   ```
   pip install opencv-python numpy Pillow requests prettytable python-dateutil
   ```

5. สร้างไฟล์ `run.bat` สำหรับเริ่มการทำงาน:
   ```
   @echo off
   python main.py %*
   ```

## 3. การตั้งค่า

### 3.1 การตั้งค่าไฟล์ config.ini

ไฟล์ `config.ini` เป็นไฟล์การตั้งค่าหลักของระบบ โดยแบ่งเป็นส่วนต่างๆ ดังนี้:

#### ส่วน [Branch]
- `id`: รหัสสาขา
- `name`: ชื่อสาขา
- `location`: สถานที่ตั้งของสาขา

#### ส่วน [Camera]
- `source`: แหล่งวิดีโอสำหรับกล้องหลัก (0 สำหรับกล้องในเครื่อง)
- `width`: ความกว้างของภาพ
- `height`: ความสูงของภาพ
- `fps`: เฟรมเรตของการแสดงผล
- `detection_line`: ตำแหน่งเส้นตรวจจับ

#### ส่วน [Detection]
- `min_area`: พื้นที่ขั้นต่ำสำหรับตรวจจับคน
- `threshold`: ค่าขีดแบ่งสำหรับการตรวจจับความเคลื่อนไหว
- `blur_size`: ขนาดของการทำ blur
- `direction_threshold`: ระยะทางขั้นต่ำที่จะถือว่ามีการเคลื่อนที่

#### ส่วน [MultiCameras]
- `enabled`: เปิดใช้งานโหมดกล้องหลายตัว (true/false)
- `camera_count`: จำนวนกล้องที่ใช้งาน
- `username`: ชื่อผู้ใช้ร่วมสำหรับกล้องทั้งหมด
- `password`: รหัสผ่านร่วมสำหรับกล้องทั้งหมด

#### ส่วน [Camera_X] (X คือ ลำดับของกล้อง)
- `name`: ชื่อกล้อง
- `type`: ประเภทกล้อง (dahua, hikvision, generic)
- `host`: ที่อยู่ IP ของกล้อง
- `port`: พอร์ต RTSP (โดยปกติคือ 554)
- `channel`: ช่องสัญญาณของกล้อง
- `detection_line`: ตำแหน่งเส้นตรวจจับเฉพาะกล้องนี้
- `min_area`: พื้นที่ขั้นต่ำสำหรับการตรวจจับเฉพาะกล้องนี้

หรือทางเลือกอื่น:
- `source`: ระบุ URL โดยตรง (ใช้แทนการระบุ host, port, username, password)

### 3.2 การตั้งค่ากล้อง RTSP

สำหรับกล้อง Dahua:
```ini
[Camera_1]
name = ประตูหน้า
type = dahua
host = 192.168.1.100
port = 554
channel = 1
username = admin
password = password123
```

สำหรับกล้อง Hikvision:
```ini
[Camera_2]
name = ประตูหลัง
type = hikvision
host = 192.168.1.101
port = 554
channel = 1
username = admin
password = password123
```

สำหรับการระบุ URL โดยตรง:
```ini
[Camera_3]
name = ลานจอดรถ
source = rtsp://admin:password123@192.168.1.102:554/stream
```

## 4. การใช้งาน

### 4.1 เริ่มการทำงานของระบบ

#### สำหรับ Linux:
```bash
./run.sh
```

#### สำหรับ Windows:
```
run.bat
```

### 4.2 ตัวเลือกการรัน

- โหมด GUI (ค่าเริ่มต้น):
  ```
  ./run.sh
  ```

- โหมดคอนโซล (ไม่มีหน้าต่างควบคุม):
  ```
  ./run.sh --no-gui
  ```

- ไม่แสดงหน้าต่างวิดีโอ:
  ```
  ./run.sh --no-display
  ```

- ระบุไฟล์ config เฉพาะ:
  ```
  ./run.sh --config my_config.ini
  ```

- เปิดโหมดดีบัก:
  ```
  ./run.sh --debug
  ```

### 4.3 การใช้งานหน้าจอ GUI

#### แท็บหน้าหลัก
- แสดงภาพจากกล้องที่เลือก
- แสดงจำนวนลูกค้าในร้าน, จำนวนลูกค้าเข้าร้าน, จำนวนลูกค้าออกจากร้าน
- ปุ่มเริ่มกล้อง, หยุดกล้อง, รีเซ็ตตัวนับ, ถ่ายภาพ

#### แท็บจัดการกล้อง
- รายการกล้องทั้งหมดในระบบ
- ปุ่มเพิ่มกล้อง, แก้ไขกล้อง, ลบกล้อง
- แสดงรายละเอียดของกล้องที่เลือก

#### แท็บสถิติและรายงาน
- แสดงสถิติการเข้า-ออกของลูกค้าย้อนหลัง
- สามารถส่งออกรายงานเป็นไฟล์ CSV

#### แท็บตั้งค่า
- ตั้งค่าข้อมูลสาขา
- ตั้งค่าพารามิเตอร์การตรวจจับ
- ตั้งค่าการเชื่อมต่อ API

## 5. การแก้ไขปัญหา

### 5.1 ปัญหาการเชื่อมต่อกับกล้อง

1. **ไม่สามารถเชื่อมต่อกับกล้อง**
   - ตรวจสอบว่า IP, พอร์ต, ชื่อผู้ใช้ และรหัสผ่านถูกต้อง
   - ลองใช้ VLC Media Player ทดสอบ URL RTSP
   - ตรวจสอบว่าพอร์ต RTSP (554) เปิดในไฟร์วอลล์
   - รหัสผ่านที่มีอักขระพิเศษอาจต้องเข้ารหัส URL

2. **ภาพกระตุก หรือตรวจจับไม่แม่นยำ**
   - ลดความละเอียดของภาพในไฟล์ config.ini
   - ปรับค่า min_area และ threshold ให้เหมาะกับสภาพแวดล้อม
   - ตรวจสอบแบนด์วิดธ์เครือข่าย

### 5.2 วิธีดูล็อกของระบบ

ระบบจะบันทึกล็อกไว้ในโฟลเดอร์ `logs/`:
- `shop_counter.log`: ล็อกหลักของระบบ
- `camera_counter.log`: ล็อกเกี่ยวกับการทำงานของกล้อง
- `data_manager.log`: ล็อกเกี่ยวกับการจัดการข้อมูล

### 5.3 ข้อผิดพลาดที่พบบ่อย

1. **ModuleNotFoundError: No module named 'cv2'**
   - แก้ไข: ติดตั้ง OpenCV ด้วยคำสั่ง `pip install opencv-python`

2. **ModuleNotFoundError: No module named 'PIL'**
   - แก้ไข: ติดตั้ง Pillow ด้วยคำสั่ง `pip install Pillow`

3. **RuntimeError: Video system not initialized**
   - แก้ไข: ตรวจสอบการติดตั้ง OpenCV และไดรเวอร์กล้อง
   - ตรวจสอบสิทธิ์การเข้าถึงกล้องในระบบปฏิบัติการ

4. **Cannot connect to camera**
   - แก้ไข: ตรวจสอบการเชื่อมต่อเครือข่ายและการตั้งค่า RTSP URL
   - ตรวจสอบว่ากล้องเปิดอยู่และสามารถเข้าถึงได้จากเครือข่าย

5. **รหัสผ่านที่มี @ ไม่ทำงาน**
   - แก้ไข: ใช้การระบุพารามิเตอร์แยก (host, username, password) แทนการระบุ URL โดยตรง
   - หรือเข้ารหัส URL: `rtsp://admin:Admin%401234@10.10.1.230:554/cam/realmonitor?channel=2&subtype=0`

## 6. การเชื่อมต่อกับเซิร์ฟเวอร์

### 6.1 การตั้งค่าการเชื่อมต่อ API

ตั้งค่าในส่วน [API] ของไฟล์ config.ini:
```ini
[API]
server_url = http://your-server-ip:5000
api_key = your_api_key
sync_interval = 900
retry_interval = 60
timeout = 30
```

- `server_url`: URL ของเซิร์ฟเวอร์หลัก
- `api_key`: API key สำหรับการยืนยันตัวตน
- `sync_interval`: รอบเวลาในการซิงค์ข้อมูล (วินาที)
- `retry_interval`: เวลารอก่อนลองเชื่อมต่อใหม่เมื่อเกิดข้อผิดพลาด (วินาที)
- `timeout`: เวลาหมดเมื่อรอการตอบสนองจากเซิร์ฟเวอร์ (วินาที)

### 6.2 การซิงค์ข้อมูล

ระบบจะซิงค์ข้อมูลต่อไปนี้กับเซิร์ฟเวอร์:
- จำนวนลูกค้าเข้า-ออกร้าน
- สถิติประจำวัน
- ข้อมูลการนัดหมาย (ถ้ามี)
- ภาพถ่าย snapshot

ข้อมูลจะถูกซิงค์โดยอัตโนมัติตามรอบเวลาที่กำหนดใน `sync_interval` หรือเมื่อทำการถ่ายภาพด้วยปุ่ม "ถ่ายภาพ"

### 6.3 การทำงานแบบออฟไลน์

ในกรณีที่ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้:
- ระบบจะยังคงทำงานได้ปกติ
- ข้อมูลจะถูกเก็บไว้ในฐานข้อมูล SQLite ในเครื่อง
- ข้อมูลที่ยังไม่ได้ซิงค์จะถูกแคชไว้และจะส่งเมื่อสามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้อีกครั้ง

## 7. การบำรุงรักษาระบบ

### 7.1 การสำรองข้อมูล

ระบบจะสำรองฐานข้อมูลอัตโนมัติตามรอบเวลาที่กำหนดใน `backup_interval` โดยสำรองไปที่โฟลเดอร์ `backups/`

คุณสามารถสำรองข้อมูลด้วยตนเองโดยการคัดลอกไฟล์:
- `shop_tracking.db`: ฐานข้อมูลหลัก
- `config.ini`: ไฟล์การตั้งค่า
- `exports/`: โฟลเดอร์ที่เก็บรายงานและภาพถ่าย

### 7.2 การอัพเกรดระบบ

ขั้นตอนการอัพเกรดระบบ:
1. สำรองไฟล์ `config.ini` และ `shop_tracking.db`
2. ดาวน์โหลดเวอร์ชันใหม่ของระบบ
3. คัดลอกไฟล์ที่สำรองไว้กลับไปยังโฟลเดอร์ใหม่
4. รันสคริปต์ติดตั้ง `./setup.sh` เพื่อติดตั้งความต้องการใหม่ (ถ้ามี)

### 7.3 การล้างข้อมูลเก่า

ระบบไม่มีกลไกลบข้อมูลเก่าโดยอัตโนมัติ คุณอาจต้องจัดการด้วยตนเอง:

1. การล้างภาพ snapshot เก่า:
   ```bash
   # ลบภาพที่เก่ากว่า 30 วัน
   find exports/snapshots -name "*.jpg" -type f -mtime +30 -delete
   ```

2. การลบไฟล์สำรองเก่า:
   ```bash
   # ลบไฟล์สำรองที่เก่ากว่า 90 วัน
   find backups -name "*.db" -type f -mtime +90 -delete
   ```

3. การลบข้อมูลเก่าจากฐานข้อมูล:
   - ใช้เครื่องมือ SQLite เช่น DB Browser for SQLite
   - หรือใช้คำสั่ง SQL โดยตรง:
     ```sql
     -- ลบข้อมูลเก่ากว่า 1 ปี
     DELETE FROM customer_counts WHERE timestamp < date('now', '-1 year');
     ```

## 8. คำถามที่พบบ่อย (FAQ)

### Q: ระบบรองรับกล้องได้สูงสุดกี่ตัว?
A: ระบบไม่มีข้อจำกัดตายตัวในจำนวนกล้อง แต่ประสิทธิภาพจะขึ้นอยู่กับสเปคของคอมพิวเตอร์ที่ใช้งาน โดยทั่วไปคอมพิวเตอร์ระดับกลางสามารถรองรับได้ 4-8 กล้องพร้อมกัน

### Q: ระบบสามารถใช้งานกับกล้องยี่ห้ออื่นที่ไม่ใช่ Dahua หรือ Hikvision ได้หรือไม่?
A: ได้ โดยสามารถใช้การตั้งค่าแบบ "generic" หรือระบุ RTSP URL โดยตรง ตราบใดที่กล้องสามารถให้สตรีม RTSP ได้

### Q: ระบบมีความแม่นยำในการนับลูกค้าเท่าไร?
A: ความแม่นยำขึ้นอยู่กับหลายปัจจัย เช่น:
- ตำแหน่งและมุมของกล้อง (ควรติดตั้งกล้องจากด้านบนมองลงมา)
- คุณภาพของภาพและแสง
- การปรับแต่งพารามิเตอร์ให้เหมาะสม
- การคาลิเบรตเส้นตรวจจับให้ตรงกับทางเข้า-ออก

ในสภาพแวดล้อมที่เหมาะสมและมีการปรับแต่งที่ดี ระบบสามารถมีความแม่นยำถึง 85-95%

### Q: ระบบสามารถแยกระหว่างลูกค้าและพนักงานได้หรือไม่?
A: ระบบปัจจุบันไม่สามารถแยกแยะบุคคลได้ จะนับเฉพาะจำนวนคนที่เดินผ่านเส้นตรวจจับ หากต้องการคุณสมบัตินี้จะต้องใช้ระบบที่มีความสามารถด้าน AI ที่สูงขึ้น

### Q: จะทำอย่างไรหากกล้องไม่สามารถเชื่อมต่อได้?
A: ตรวจสอบขั้นตอนต่อไปนี้:
1. ตรวจสอบว่ากล้องเปิดอยู่และเชื่อมต่อกับเครือข่าย
2. ตรวจสอบว่าสามารถ ping ไปยัง IP ของกล้องได้
3. ตรวจสอบความถูกต้องของ username และ password
4. ใช้โปรแกรม VLC เพื่อทดสอบการเชื่อมต่อ RTSP
5. ตรวจสอบว่าพอร์ต RTSP (554) ไม่ถูกบล็อคโดยไฟร์วอลล์
6. ใช้สคริปต์ test_rtsp.py เพื่อทดสอบการเชื่อมต่อ

## 9. ข้อมูลเพิ่มเติมและการสนับสนุน

### 9.1 ข้อมูลเพิ่มเติม
- เอกสารของ OpenCV: https://docs.opencv.org/
- ข้อมูล RTSP URL สำหรับกล้องยี่ห้อต่างๆ: https://www.ispyconnect.com/cameras

### 9.2 การสนับสนุนและการรายงานปัญหา
- หากพบปัญหาในการใช้งาน กรุณาตรวจสอบไฟล์ล็อกใน `logs/` ก่อนเพื่อหาสาเหตุ
- สำหรับปัญหาเร่งด่วน กรุณาส่งอีเมลพร้อมแนบไฟล์ล็อกและรายละเอียดของปัญหา

## 10. การปรับแต่งประสิทธิภาพ

### 10.1 การปรับแต่งการตรวจจับคน

เพื่อให้การตรวจจับคนทำงานได้อย่างแม่นยำ คุณควรปรับแต่งค่าต่อไปนี้:

1. **min_area** (พื้นที่ขั้นต่ำ):
   - ค่านี้กำหนดขนาดของวัตถุที่จะถูกตรวจจับเป็นคน
   - ค่าเริ่มต้น: 500
   - ค่าแนะนำ:
     - กล้องติดสูง/ไกล: 300-500
     - กล้องระยะปานกลาง: 500-1000
     - กล้องระยะใกล้: 1000-3000

2. **threshold** (ค่าขีดแบ่ง):
   - ค่านี้กำหนดความไวในการตรวจจับการเคลื่อนไหว
   - ค่าเริ่มต้น: 20
   - ค่าแนะนำ:
     - สภาพแสงสว่างมาก: 25-30
     - สภาพแสงปานกลาง: 20-25
     - สภาพแสงน้อย: 15-20

3. **detection_line** (เส้นตรวจจับ):
   - ต้องตั้งในตำแหน่งที่ตรงกับทางเข้า-ออก
   - ควรตั้งในพื้นที่ที่คนต้องเดินผ่านเท่านั้น
   - ปรับได้ในแท็บ "จัดการกล้อง" โดยการแก้ไขกล้อง

4. **direction_threshold** (ระยะทางขั้นต่ำ):
   - ค่านี้กำหนดระยะทางขั้นต่ำที่ต้องเคลื่อนที่จึงจะนับเป็นการเดินผ่าน
   - ค่าเริ่มต้น: 10
   - เพิ่มค่านี้ถ้าพบว่าระบบนับซ้ำเมื่อคนยืนอยู่กับที่ใกล้เส้น

### 10.2 การลดการใช้ทรัพยากรระบบ

หากระบบใช้ทรัพยากรมากเกินไป ลองวิธีต่อไปนี้:

1. ลดความละเอียดของภาพ:
   ```ini
   [Camera]
   width = 320
   height = 240
   ```

2. ลด FPS:
   ```ini
   [Camera]
   fps = 15
   ```

3. เริ่มระบบโดยไม่แสดงวิดีโอ:
   ```bash
   ./run.sh --no-display
   ```

4. ยกเลิกการบันทึกภาพ snapshot อัตโนมัติ:
   ```ini
   [Recording]
   save_snapshots = false
   ```

5. เพิ่มรอบเวลาในการซิงค์ข้อมูล:
   ```ini
   [API]
   sync_interval = 1800  # ทุก 30 นาที
   ```